version: "3.10.12"

services:
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  celery_worker:
    build: 
      context: .         
      dockerfile: Docker/Dockerfile.celery  
    container_name: celery-worker
    command: celery -A backend.tasks worker --loglevel=info
    depends_on:
      - redis
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    restart: always

  fastapi-backend:
    build:
      context: .
      dockerfile: Docker/Dockerfile.fastapi
    container_name: fastapi-backend
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      MONGO_URI: mongodb://mongodb:27017/mydatabase  # MongoDB connection string
      REDIS_HOST: redis
      REDIS_PORT: 6379

  streamlit-ui:
    build:
      context: .
      dockerfile: Docker/Dockerfile.streamlit
    container_name: streamlit-ui
    ports:
      - "8501:8501"
    restart: always
    depends_on:
      - fastapi-backend

volumes:
  mongo-data:
    driver: local
